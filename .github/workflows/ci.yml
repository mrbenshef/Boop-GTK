name: Continuous integration

on:
  push:
    branches: [ trunk ]
  pull_request:
    branches: [ trunk ]

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    # cache cargo
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    # deps
    - name: GTK development librarys
      run: sudo apt-get install -y libgtk-3-dev libgtksourceview-3.0-dev
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    # check
    - uses: actions-rs/cargo@v1
      with:
        command: check
    # test
    - uses: actions-rs/cargo@v1
      with:
        command: test
    # rustfmt
    - run: rustup component add rustfmt
    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    # clippy
    - run: rustup component add clippy
    - uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings

  macos:
    name: MacOS
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    # cache cargo
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    # deps
    - name: GTK development librarys
      run: brew install gtk+3 gtksourceview3
    # build
    - name: build
      run: cargo build
    # test
    - name: test
      run: cargo test

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    # cache cargo
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    # get the last commit of gvsbuild, this will be used as the cache key     
    - name: get last gvsbuild commit
      run: git ls-remote https://github.com/wingtk/gvsbuild.git refs/heads/master > commit.txt
      shell: cmd
    # cache gvsbuild
    - uses: actions/cache@v2
      id: cache
      with:
        path: lib\**
        key: ${{ runner.os }}-gvsbuild-${{ hashFiles('**/commit.txt') }}
    - name: make library directory
      run: mkdir C:\gtk-build\gtk\x64\release\lib
      shell: cmd
      if: steps.cache.outputs.cache-hit == 'true'
    - name: move lib files
      run: xcopy /e /i lib C:\gtk-build\gtk\x64\release\lib
      shell: cmd
      if: steps.cache.outputs.cache-hit == 'true'
    - name: debug tree
      run: tree C:\gtk-build\gtk\x64\release\lib
      shell: cmd
      if: steps.cache.outputs.cache-hit == 'true'
    # if there was a cache miss, clone
    - name: gvsbuild
      run: git clone https://github.com/wingtk/gvsbuild.git C:\gtk-build\github\gvsbuild
      if: steps.cache.outputs.cache-hit != 'true'
    # remove git's bin, there are conflicting cygwin dll's
    - name: remove Git
      run: rmdir "C:\Program Files\Git\usr\bin" /s /q
      shell: cmd
    # fetch gtk dependencies
    - name: GTK development librarys
      run: python .\build.py build -p=x64 --vs-ver=16 --msys-dir=C:\msys64 -k --enable-gi --py-wheel --py-egg gtk3 gdk-pixbuf gtksourceview3
      working-directory: C:\gtk-build\github\gvsbuild
      if: steps.cache.outputs.cache-hit != 'true'
    # build
    - name: build
      run: cargo build
      env:
        RUSTFLAGS: -L C:\gtk-build\gtk\x64\release\lib
    # test
    - name: test
      run: cargo test
      env:
        RUSTFLAGS: -L C:\gtk-build\gtk\x64\release\lib
    # copy lib files for cacheing
    - name: make lib folder
      run: mkdir lib
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'
    - name: move lib files
      run: xcopy /e /i C:\gtk-build\gtk\x64\release\lib %cd%\lib
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'
    